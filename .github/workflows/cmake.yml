name: CMake

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3

    - name: Install GCC
      uses: egor-tensin/setup-gcc@v1
      with:
        # GCC version to install
        version: '11'

    - name: Get the latest version of CMake
    - uses: lukka/get-cmake@latest

    - name: Restore vcpkg artifacts, or setup vcpkg for building artifacts
      uses: lukka/run-vcpkg@v10.3
      with:
        # Specify the full SHA-1 hash of a Git commit (not a branch name, nor a tag!) that establishes which version of vcpkg needs to be used. When using vcpkg as a Git submodule, this input is *not* needed as implicitly specified by the submodule.
        vcpkgGitCommitId: '88b1071e39f13b632644d9d953738d345a4ac055'

    - name: run-cmake
      uses: lukka/run-cmake@v10.0
      with:
        # The name of the configure preset. Optional.
        configurePreset: 'linux-g++-11-x64-release'
        # The name of the build preset. Optional.
        buildPreset: 'build-linux-g++-11-x64-release'
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        # A file, directory or wildcard pattern that describes what to upload
        path: Relay
